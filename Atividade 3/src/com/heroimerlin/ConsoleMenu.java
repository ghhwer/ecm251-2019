package com.heroimerlin;import sun.reflect.generics.reflectiveObjects.NotImplementedException;import java.util.ArrayList;import java.util.List;import java.util.Scanner;import static com.heroimerlin.constants.Constants.*;public class ConsoleMenu {    private final Scanner scan;    private boolean keepLoop = true;    boolean keepLoopLocal = true;    private void showMenu(int authLevel){        String menuString =                "Menu principal "+COMPANY_NAME+"\n"+                "Cadastrar Produto - 1\n"+                "Procurar Produto - 2\n"+                "Vender Produto - 3\n";        if(authLevel == ADM_AUTH_LEVEL)            menuString += "Adicionar Usuário - 4\nRemover Usuário - 5\nSair - 6\n";        else            menuString += "Sair - 4\n";        System.out.printf(menuString);    }    private void logProduct(){        ArrayList<Product> productList = new ArrayList<Product>();        keepLoopLocal = true;        String cat = "";        String name = "";        String manu = "";        int qnt = 0;        float price = 0.0f;        while (keepLoopLocal) {            System.out.println("Categoria (Ferramenta = 1 ou Tinta = 2):");            int cat_temp = scan.nextInt();            if (cat_temp <= 2 && cat_temp > 0) {                if (cat_temp == 1)                    cat = "ferramenta";                else                    cat = "tinta";                scan.nextLine();                System.out.println("Nome do Produto:");                name = scan.nextLine();                System.out.println("Fabricante:");                manu = scan.nextLine();                System.out.println("Qunatidade:");                qnt = scan.nextInt();                System.out.println("Preço:");                price = scan.nextFloat();                System.out.println("Continuar? (S/N)");                String k = scan.next();                if(k.equals("N") || k.equals("n")){                    keepLoopLocal = false;                }                Product p = new Product(name,price,qnt, manu, cat);                productList.add(p);            } else {                System.out.println("Categoria Inválida!");            }        }        SingletonDAO.getInstance().updateOrAppendFromList(productList);    }    private void searchProduct(){        System.out.println("Buscar por Categoria (S/N):");        String k = scan.next();        String cat = "";        List<Product> list = null;        if(k.equals("S") || k.equals("s")){            System.out.println("Categoria (Ferramenta = 1 ou Tinta = 2):");            int cat_temp = scan.nextInt();            if (cat_temp <= 2 && cat_temp > 0) {                if (cat_temp == 1)                    cat = "ferramenta";                else                    cat = "tinta";                list = SingletonDAO.getInstance().getAllProdutosByCat(cat);            }        }        else{            list = SingletonDAO.getInstance().getAllProdutos();        }        for(int i = 0; i< list.size();i++)        {            System.out.println("______________");            Product p = list.get(i);            System.out.println("Codigo:"+p.productCode);            System.out.println("Categoria:"+p.category);            System.out.println("Nome:"+p.name);            System.out.println("Fabricante:"+p.manufacturer);            System.out.println("Quantidade:"+p.stockQuant);            System.out.println("Preço:"+p.productPrice);            System.out.println("______________"+'\n');        }    }    private void doSale(){        keepLoopLocal = true;        int code = 0;        int qnt = 0;        while (keepLoopLocal) {            System.out.println("ID do Produto:");            code = scan.nextInt();            System.out.println("Quantidade:");            qnt = scan.nextInt();            System.out.println("Adicionar Mais Produtos? (S/N)");            String k = scan.next();            if(k.equals("N") || k.equals("n")){                keepLoopLocal = false;            }            Product p = SingletonDAO.getInstance().getProductByCode(code);            //ADICIONA BANCO DE DADOS        }    }    private void addUser(){        throw new NotImplementedException();    }    private void removeUser(){        throw new NotImplementedException();    }    private void exit(){        keepLoop = false;    }    private void actOnOption(int option, int authLevel){        switch (option){            case 1:logProduct();                break;            case 2:searchProduct();                break;            case 3:doSale();                break;        }        if(authLevel == ADM_AUTH_LEVEL){            switch (option){                case 4:addUser();                    break;                case 5:removeUser();                    break;                case 6:exit();                    break;            }        }        if(authLevel == VENDEDOR_AUTH_LEVEL){            if(option == 4)                exit();        }    }    ConsoleMenu(User user){        scan = new Scanner(System.in);        while (keepLoop){            System.out.println(MENU_HEADER);            showMenu(user.getAuthLevel());            int option = scan.nextInt();            actOnOption(option, user.getAuthLevel());            System.out.println(MENU_FOOTER());        }    }}